package com.bacardi.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.bacardi.domain.core.Bacardi;

import com.bacardi.dao.mysql.Bacardi_Default_ActivityDao;

import com.bacardi.domain.core.BaUser;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Bacardi_Default_ActivityService")
public class Bacardi_Default_ActivityService extends BaBaseService  {
private static Logger log = Logger.getLogger(Bacardi_Default_ActivityService.class.getName());

	private Bacardi_Default_ActivityDao Bacardi_Default_Activity_dao;


	public Bacardi_Default_ActivityDao get_Bacardi_Default_Activity_dao() {
		return Bacardi_Default_Activity_dao;
	}


	@Resource(name="Bacardi_Default_ActivityDao")
	public void set_Bacardi_Default_Activity_dao(Bacardi_Default_ActivityDao Bacardi_Default_Activity_dao) {
		this.Bacardi_Default_Activity_dao = Bacardi_Default_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Bacardi noun into database
	*@param Bacardi
	*@param user
	*@return the_Bacardi object will return
	*@throws Exception
	*/

	public Bacardi create_bacardi(Bacardi Bacardi, BaUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_bacardi service operation started !");

		try{
			Bacardi the_Bacardi;

			the_Bacardi = Bacardi_Default_Activity_dao.create_bacardi(Bacardi, user);

 			log.info(" Object returned from create_bacardi  service method !");
			return the_Bacardi;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_bacardi service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Bacardi noun into database
	*@param Bacardi
	*@param user
	*@return the_Bacardi object will return
	*@throws Exception
	*/

	public Bacardi update_bacardi(Bacardi Bacardi, BaUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_bacardi service operation started !");

		try{
			Bacardi the_Bacardi;

			the_Bacardi = Bacardi_Default_Activity_dao.update_bacardi(Bacardi, user);

 			log.info(" Object returned from update_bacardi  service method !");
			return the_Bacardi;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_bacardi service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Bacardi noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Bacardi object will return
	*@throws Exception
	*/

	public Bacardi bacardi_search_for_update(long id, BaUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("bacardi_search_for_update service operation started !");

		try{
			Bacardi the_Bacardi;

			the_Bacardi = Bacardi_Default_Activity_dao.bacardi_search_for_update(id, user);

 			log.info(" Object returned from bacardi_search_for_update  service method !");
			return the_Bacardi;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("bacardi_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Bacardi noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Bacardi id deleted based on id
	*@throws Exception
	*/

	public String  delete_bacardi(long id, BaUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_bacardi service operation started !");

		try{
			String method_return_message;

			method_return_message = Bacardi_Default_Activity_dao.delete_bacardi(id, user);

 			log.info(" Object returned from delete_bacardi  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_bacardi service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Bacardi noun from  database
	*
	*
	*@return List of Bacardi object will return
	*@throws Exception
	*/

	public ArrayList<Bacardi> get_all_bacardi() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Bacardi> Bacardi_list;

			Bacardi_list = Bacardi_Default_Activity_dao.get_all_bacardi();

 			log.info(" Object returned from   service method !");
			return Bacardi_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}